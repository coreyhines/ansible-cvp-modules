---
- hosts: localhost
  gather_facts: yes
  connection: local
  vars:
    xcvr_eval: "40GBASE-UNIV"
    xcvr_csv: "results/xcvrCheck-{{ ansible_date_time.date }}-{{ ansible_date_time.time }}.csv"
    cvp_server: "cvp07.freeblizz.com"
    cvp_user: "cvpadmin"
    cvp_pass: !vault |
                     $ANSIBLE_VAULT;1.1;AES256
                     66623863666566323961393965353661643734626138363232663333623566666230363434343762
                     3938343233343234313732363464333533383263613134330a366132303130646533366338323637
                     64653162663763326261333239356165656662333236626333356566646665613630626262323736
                     6638643230316437340a383534363031633030633963623863396331353666613861353863613566
                     6631
    email_username: !vault |
                           $ANSIBLE_VAULT;1.1;AES256
                           62376335343539616663303662303734356232613332326161386463386632653431373832653734
                           3763633638396433633635643262323164353938303932300a646635623632363537393339333639
                           66386663376437313434303737643935356165356566623536386564336639376165653738613733
                           6432616135663232650a323834313435663034313462313364363831366466393466323738366137
                           35653632363736343366626662616561323366653439646538376361343437376231
    email_password: !vault |
                           $ANSIBLE_VAULT;1.1;AES256
                           65313164306665313432643339663366343933343231643964653034386161346135386636323833
                           6430303565663533653064393239616534303634616638340a653237333537373430366536343964
                           36636132393966663263336362393338343465353565343737643538346663623337613431303162
                           6238383036306433630a623661306338353833333536386562633739373838363864316330613465
                           62346235323935303032303036653030323539306665636534623130366466373431
    cvp_auth_url: "https://{{ cvp_server }}/cvpservice/login/authenticate.do" 
    cvp_inventory_pre: "https://{{ cvp_server }}/cvpservice/inventory/getInventory.do?startIndex=0&endIndex=0"
    cvp_inventory: "https://{{ cvp_server }}/cvpservice/inventory/devices"
    cvp_protocol: "https"
    switch_sn: []
    switch_hostname: {}

  tasks:
    - name: Setup REST API Session
      uri:
       url: "{{ cvp_auth_url }}"
       method: POST
       validate_certs: no
       headers: 
         Accept: "application/json"
         Content-Type: "application/json"
       body_format: "json"
       body:
        userId: "{{ cvp_user }}"
        password: "{{ cvp_pass }}"
       force_basic_auth: yes
       status_code: 200,201
      register: login
    
    - name: Get CVP Version
      uri:
        url: "https://{{ cvp_server }}/cvpservice/cvpInfo/getCvpInfo.do"
        method: GET
        validate_certs: no
        return_content: yes
        headers:
          Cookie: "{{ login.set_cookie }}"
      register: cvp_version

    - name: Parse CVP Version
      set_fact:
        cvp_version_major: "{{ cvp_version.json.version.split('.')[:2] | join('.') }}"
    
    - name: Check CVP Version
      set_fact:
        cvp_inventory: "{{ cvp_inventory_pre }}"
      when: 
        - cvp_version_major == '2018.1'

    - name: Get list of devices
      uri:
        url: "{{ cvp_inventory_pre if cvp_version_major == '2018.1' else cvp_inventory }}"
        method: GET
        validate_certs: no
        return_content: yes
        headers:
          Cookie: "{{ login.set_cookie }}"
      register: switch_list

    - name: Get Serial Numbers
      set_fact:
        switch_sn: '{{ switch_sn + [item.serialNumber] }}'
        switch_hostname: "{{ switch_hostname | combine({item.serialNumber:item.fqdn}) }}"
      loop: "{{ switch_list.json.netElementList  if cvp_version_major == '2018.1' else switch_list.json }}"
      when: item.serialNumber != ""

    - name: Get list of ports
      uri:
        url: "https://{{ cvp_server }}/api/v1/rest/{{ item }}/Sysdb/interface/eth/portid/portId"
        method: GET
        validate_certs: no
        return_content: yes
        headers:
          Cookie: "{{ login.set_cookie }}"
      loop: "{{ switch_sn }}"
      register: port_list

    - name: Gather All Interfaces
      rcvp_telem:
        cvp_arg: Intfs
        sw_ports: "{{ port_list.results }}"
      register: all_intfs

    - name: Get status on each port_list
      uri:
        url: https://{{ cvp_server }}/api/v1/rest/{{  item.0.serialNumber }}/Sysdb/hardware/archer/xcvr/status/all/{{ item.1 }}
        method: GET
        validate_certs: no
        return_content: yes
        body_format: "json"
        headers:
          Cookie: "{{ login.set_cookie }}"
      with_subelements:
        - "{{ all_intfs.results }}"
        - ports
      register: port_status

    - name: Logout of CVP
      uri: 
        url: "https://{{ cvp_server }}/cvpservice/login/logout.do"
        method: POST
        validate_certs: no
        return_content: yes
        headers:
          Cookie: "{{ login.set_cookie }}"
      
    - name: Evaluate Switch Port Xcvrs
      rcvp_telem:
        cvp_arg: Eval
        sw_ports: "{{ port_status.results }}"
      register: port_xcvr
    
    - name: Create New Result csv file
      lineinfile:
        path: "{{ xcvr_csv }}"
        line: "fqdn,serialNumber,interface,xcvr"
        insertafter: EOF
        create: yes

    - name: Check for {{ xcvr_eval }}
      lineinfile:
        path: "{{ xcvr_csv }}"
        line: "{{ switch_hostname[item.serialNumber] }},{{ item.serialNumber }},{{ item.interface }},{{ item.xcvr }}"
        insertafter: EOF
      loop: "{{ port_xcvr.results }}"
      when: item.xcvr == xcvr_eval
    
    - name: Sending an e-mail using Gmail SMTP servers
      mail:
        host: smtp.gmail.com
        port: 587
        username: "{{ email_username }}"
        password: "{{ email_password }}"
        to: 
        - Optics-migration-PM <chines@arista.com>
        - Rob Martin <robmartin@arista.com>
        subject: Ansible-XCVR-report
        body: System {{ ansible_hostname }} XCVR Report information attached.
        attach:
        - "{{ xcvr_csv }}"
      delegate_to: localhost
